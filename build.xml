<project name="hunsha" basedir="." default="deploy" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<echo>${ant.project.name} build</echo>
	<echo>
		${ant.project.name} build.xml:
		version :4.0
		author :xiaozhengdong [Learn from jinxin]
		Any questions you can contact him.</echo>

	<property file="build.properties" />
	<!--依赖的jar包，用于maven整合ant-->
	<path id="maven-ant-tasks.classpath" path="${basedir}/lib/ant/maven-ant-tasks-2.1.2.jar" />
	<path id="ant-contrib.classpath" path="${basedir}/lib/ant/ant-contrib-1.0b3.jar" />

	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" classpathref="maven-ant-tasks.classpath"
		uri="antlib:org.apache.maven.artifact.ant" />
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="ant-contrib.classpath" />

	<property name="deploy.lib" value="${deploy.home}/WEB-INF/lib" />
	<mkdir dir="${deploy.home}/WEB-INF/classes" />
	<mkdir dir="${deploy.lib}" />

	<!--定义Maven2变量 -->
	<artifact:pom id="feilongMaven" file="pom.xml" />
	<artifact:dependencies filesetId="feilong.maven.dependencies.fileset" pathid="feilong.maven.dependencies.runtime"
		useScope="runtime">
		<pom refid="feilongMaven" />
	</artifact:dependencies>

	<artifact:dependencies pathid="feilong.maven.dependencies.system" scopes="system">
		<pom refid="feilongMaven" />
	</artifact:dependencies>

	<artifact:dependencies pathid="feilong.maven.dependencies.all">
		<pom refid="feilongMaven" />
	</artifact:dependencies>

	<!-- install -->
	<target name="maven-install" description="install">
		<echo>[install]:ant use maven to install project</echo>
		<artifact:mvn pom="pom.xml">
			<arg value="clean" />
			<arg value="install" />
		</artifact:mvn>
	</target>

	<!-- copyLib -->
	<target name="copyLib" description="copy lib">
		<echo>[copyLib]:will be copied maven dependencies jar(runtime and system scope)</echo>

		<delete dir="${deploy.home}/WEB-INF/lib" />
		<mkdir dir="${deploy.home}/WEB-INF/lib" />

		<copy todir="${deploy.lib}">
			<fileset refid="feilong.maven.dependencies.fileset" />
			<mapper type="flatten" />
		</copy>

		<for param="mavenSystemJar">
			<path refid="feilong.maven.dependencies.system" />
			<sequential>
				<echo>@{mavenSystemJar}</echo>
				<copy todir="${deploy.lib}" file="@{mavenSystemJar}" />
			</sequential>
		</for>
	</target>

	<!-- copyClass -->
	<target name="copyClass">
		<delete dir="${deploy.home}/WEB-INF/classes" />
		<echo>[copyClass]:Compiled classes will be copied and no pre-compile works done.
			Please confirm the source codes are
			compiled successfully.</echo>
		<copy todir="${deploy.home}/WEB-INF/classes">
			<fileset dir="${feilongMaven.build.outputDirectory}" />
		</copy>
	</target>

	<!-- copyJsp -->
	<target name="copyJsp">
		<copy todir="${deploy.home}">
			<fileset dir="${basedir}/src/main/webapp" />
		</copy>
	</target>

	<target name="minjs">
		<delete dir="${basedir}/target/scripts">
			<include name="**/*.*" />
		</delete>
		<for param="file">
			<path>
				<fileset dir="${basedir}/src/main/webapp/scripts" includes="**/*.js" />
			</path>
			<sequential>
				<propertyregex override="true" property="filename" input="@{file}" regexp="(.*)[\\/](.*\.js)" replace="\2" />
				<propertyregex override="true" property="path" input="@{file}" regexp="(.*)webapp[\\/]scripts(.*)[\\/](.*\.js)"
					replace="\2" />
				<propertyregex override="true" property="min" input="@{file}" regexp="(.*)[\\/](.*)\.(.*)\.js"
					replace="\3" defaultvalue="--" />
				<if>
					<equals arg1="${min}" arg2="min" />
					<then>
						<echo level="warning">filename "${filename}" with ".min",will uncompressed,only copy</echo>
						<copy file="@{file}" todir="${basedir}/target/scripts" />
					</then>
					<else>
						<mkdir dir="${basedir}/target/scripts/${path}" />
						<echo level="warning">begin yuicompressor ${basedir}/target/scripts/${path}/${filename}</echo>
						<java jar="${basedir}/lib/yuicompressor/yuicompressor-2.4.2.jar" dir="${basedir}/src/main/webapp/scripts/${path}"
							fork="true">
							<arg value="-v" />
							<arg value="${filename}" />
							<arg value="-o" />
							<arg value="${basedir}/target/scripts/${path}/${filename}" />
							<arg value="--charset" />
							<arg value="UTF-8" />
						</java>
					</else>
				</if>
			</sequential>
		</for>
	</target>

	<target name="copyJs" depends="minjs">
		<copy todir="${deploy.home}/scripts">
			<fileset dir="${basedir}/target/scripts" />
		</copy>
	</target>

	<!-- minCss -->
	<target name="minCss">
		<mkdir dir="${basedir}/target/css" />
		<delete dir="${basedir}/target/css">
			<include name="**/*.*" />
		</delete>
		<for param="file">
			<path>
				<fileset dir="${basedir}/src/main/webapp/css" includes="**/*.css" />
			</path>
			<sequential>
				<propertyregex override="true" property="filename" input="@{file}" regexp="(.*)[\\/](.*\.css)"
					replace="\2" />
				<propertyregex override="true" property="path" input="@{file}" regexp="(.*)webapp[\\/]css(.*)[\\/](.*\.css)"
					replace="\2" />
				<propertyregex override="true" property="min" input="@{file}" regexp="(.*)[\\/](.*)\.(.*)\.css"
					replace="\3" defaultvalue="--" />
				<if>
					<equals arg1="${min}" arg2="min" />
					<then>
						<echo level="warning">filename "${filename}" with ".min",will uncompressed,only copy</echo>
						<copy file="@{file}" todir="${basedir}/target/css" />
					</then>
					<else>
						<mkdir dir="${basedir}/target/css/${path}" />
						<java jar="${basedir}/lib/yuicompressor/yuicompressor-2.4.2.jar" dir="${basedir}/src/main/webapp/css/${path}"
							fork="true">

							<arg value="${filename}" />
							<arg value="-o" />
							<arg value="${basedir}/target/css/${path}/${filename}" />
							<arg value="--charset" />
							<arg value="UTF-8" />
						</java>
					</else>
				</if>
			</sequential>
		</for>
	</target>

	<!-- copyCss -->
	<target name="copyCss" depends="minCss">
		<copy todir="${deploy.home}/css">
			<fileset dir="${basedir}/target/css" />
		</copy>
	</target>


	<!-- copyUI just use for test -->
	<target name="copyUI">
		<echo>deploy.home.UI:${deploy.home.UI}</echo>
		<echo>UI.dir:${UI.dir}</echo>
		<copy todir="${deploy.home.UI}">
			<fileset dir="${UI.dir}" />
		</copy>
	</target>

	<target name="deploy" depends="maven-install,copyClass,copyJsp,copyLib" />
	<target name="deploy-compressorJSCSS" depends="deploy,copyJs,copyCss" />
	<target name="deploy-nolib" depends="maven-install,copyClass,copyJsp" />

	<!-- 用于集成测试 -->
	<target name="deploy-forHudson-nocompressorJSCSS" description="deleteclasses,deletelib,copyLib,maven-install,copyClass,copyJsp">
		<delete dir="${deploy.home}/WEB-INF/classes" />
		<delete dir="${deploy.home}/WEB-INF/lib" />
		<antcall target="copyLib" />
		<antcall target="maven-install" />
		<antcall target="copyClass" />
		<antcall target="copyJsp" />
	</target>

	<!-- 不删除 resources/product/** 其他都删除, 整体更新发布 -->
	<target name="deploy-overallrelease-nocompressorJSCSS">
		<echo>${deploy.home}</echo>
		<delete verbose="true" includeemptydirs="true">
			<fileset dir="${deploy.home}">
				<exclude name="resources/**/**" />
			</fileset>
		</delete>
		<antcall target="copyLib" />
		<antcall target="maven-install" />
		<antcall target="copyClass" />
		<antcall target="copyJsp" />
	</target>

	<!-- 用于集成测试(压缩js,css),整体发布的时候改成这个 -->
	<target name="deploy-forHudson-overallrelease" description="用于集成测试(压缩js,css),整体发布的时候改成这个">
		<echo>${deploy.home}</echo>
		<delete verbose="true" includeemptydirs="true">
			<fileset dir="${deploy.home}">
				<exclude name="resources/**/**" />
			</fileset>
		</delete>
		<antcall target="copyLib" />
		<antcall target="maven-install" />
		<antcall target="copyClass" />
		<antcall target="copyJsp" />
		<antcall target="copyJs" />
		<antcall target="copyCss" />
	</target>
</project>